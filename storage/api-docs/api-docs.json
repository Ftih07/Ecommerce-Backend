{
    "openapi": "3.0.0",
    "info": {
        "title": "API Documentation",
        "description": "Documentation for the Bookstore API",
        "contact": {
            "email": "admin@example.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://localhost:8000/api",
            "description": "API Server"
        }
    ],
    "paths": {
        "/api/carts": {
            "get": {
                "tags": [
                    "Carts"
                ],
                "summary": "Get all carts",
                "operationId": "267834c76f4f604c89ceb2d0aba43bfc",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Cart"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Carts"
                ],
                "summary": "Create a new cart",
                "operationId": "2176b5481799873176eccc4def6e8ca7",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "quantity",
                                    "total_price",
                                    "product_id",
                                    "user_id"
                                ],
                                "properties": {
                                    "quantity": {
                                        "type": "integer"
                                    },
                                    "total_price": {
                                        "type": "number",
                                        "format": "float"
                                    },
                                    "product_id": {
                                        "type": "integer"
                                    },
                                    "user_id": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Cart created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Cart"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/api/carts/{id}": {
            "get": {
                "tags": [
                    "Carts"
                ],
                "summary": "Get a cart by ID",
                "operationId": "a2104e24d474cf308579ee3074ead149",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Cart found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Cart"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Cart not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Carts"
                ],
                "summary": "Update a cart",
                "operationId": "afa2a12dec9e03654f26142094367925",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "quantity": {
                                        "type": "integer"
                                    },
                                    "total_price": {
                                        "type": "number",
                                        "format": "float"
                                    },
                                    "product_id": {
                                        "type": "integer"
                                    },
                                    "user_id": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Cart updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Cart"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Cart not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Carts"
                ],
                "summary": "Delete a cart",
                "operationId": "1ec691dc69823fc0a41f12762eea2292",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Cart deleted"
                    },
                    "404": {
                        "description": "Cart not found"
                    }
                }
            }
        },
        "/api/orders": {
            "get": {
                "tags": [
                    "Orders"
                ],
                "summary": "Get all orders",
                "operationId": "803fc5d32177a888e12dd7a8f9d0e6d4",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Order"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Orders"
                ],
                "summary": "Create a new order",
                "operationId": "33d737c93193573b1687e463b1562642",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "final_price",
                                    "cart_id",
                                    "payment_id",
                                    "order_date"
                                ],
                                "properties": {
                                    "final_price": {
                                        "type": "number"
                                    },
                                    "cart_id": {
                                        "type": "integer"
                                    },
                                    "payment_id": {
                                        "type": "integer"
                                    },
                                    "order_date": {
                                        "type": "string",
                                        "format": "date"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Order created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Order"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/api/orders/{id}": {
            "get": {
                "tags": [
                    "Orders"
                ],
                "summary": "Get an order by ID",
                "operationId": "323fecf06eebc01290343e81c470453f",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Order found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Order"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Order not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Orders"
                ],
                "summary": "Update an order",
                "operationId": "d1bc63a1af95b13f6712635541478040",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "final_price": {
                                        "type": "number"
                                    },
                                    "cart_id": {
                                        "type": "integer"
                                    },
                                    "payment_id": {
                                        "type": "integer"
                                    },
                                    "order_date": {
                                        "type": "string",
                                        "format": "date"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Order updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Order"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Order not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Orders"
                ],
                "summary": "Delete an order",
                "operationId": "3bdb01ae061166f8fcc7a9f60544a80a",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Order deleted"
                    },
                    "404": {
                        "description": "Order not found"
                    }
                }
            }
        },
        "/api/payments": {
            "get": {
                "tags": [
                    "Payments"
                ],
                "summary": "Get all payments",
                "operationId": "a67c4dcf277fa699515fd3b6d4835388",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Payment"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Payments"
                ],
                "summary": "Create a new payment",
                "operationId": "6b47fbea138d1f528831ed3e92ee46fd",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "payment_method",
                                    "status"
                                ],
                                "properties": {
                                    "payment_method": {
                                        "type": "string"
                                    },
                                    "status": {
                                        "type": "string",
                                        "enum": [
                                            "pending",
                                            "paid",
                                            "failed"
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Payment created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Payment"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/api/payments/{id}": {
            "get": {
                "tags": [
                    "Payments"
                ],
                "summary": "Get a payment by ID",
                "operationId": "055c1b4080a8c5b59d53aa69a505abf5",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Payment found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Payment"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Payment not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Payments"
                ],
                "summary": "Update a payment",
                "operationId": "256d3cd03413b7fd8f82cf4491f08847",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "payment_method": {
                                        "type": "string"
                                    },
                                    "status": {
                                        "type": "string",
                                        "enum": [
                                            "pending",
                                            "paid",
                                            "failed"
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Payment updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Payment"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Payment not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Payments"
                ],
                "summary": "Delete a payment",
                "operationId": "fd511b89a9c38f94cb4d1e5a35fe9f40",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Payment deleted"
                    },
                    "404": {
                        "description": "Payment not found"
                    }
                }
            }
        },
        "/stores": {
            "get": {
                "tags": [
                    "Stores"
                ],
                "summary": "Get all stores",
                "description": "Mengambil semua data toko",
                "operationId": "getStores",
                "responses": {
                    "200": {
                        "description": "Berhasil mengambil data toko",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Store"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Stores"
                ],
                "summary": "Create a new store",
                "description": "Membuat toko baru",
                "operationId": "createStore",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "city"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Toko Elektronik"
                                    },
                                    "city": {
                                        "type": "string",
                                        "example": "Bandung"
                                    },
                                    "profile_image": {
                                        "type": "string",
                                        "example": "http://example.com/image.jpg",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Store berhasil dibuat",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Store"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request tidak valid"
                    }
                }
            }
        },
        "/stores/{id}": {
            "get": {
                "tags": [
                    "Stores"
                ],
                "summary": "Get a store by ID",
                "description": "Mengambil data toko berdasarkan ID",
                "operationId": "getStoreById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID toko",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Toko ditemukan",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Store"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Toko tidak ditemukan"
                    }
                }
            },
            "put": {
                "tags": [
                    "Stores"
                ],
                "summary": "Update store data",
                "description": "Memperbarui data toko berdasarkan ID",
                "operationId": "updateStore",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID toko",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": false,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Toko Gadget"
                                    },
                                    "city": {
                                        "type": "string",
                                        "example": "Jakarta"
                                    },
                                    "profile_image": {
                                        "type": "string",
                                        "example": "http://example.com/gadget.jpg",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Toko berhasil diperbarui",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Store"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Toko tidak ditemukan"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Stores"
                ],
                "summary": "Delete a store",
                "description": "Menghapus toko berdasarkan ID",
                "operationId": "deleteStore",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID toko",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Toko berhasil dihapus",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Store deleted"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Toko tidak ditemukan"
                    }
                }
            }
        },
        "/users": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get all users",
                "description": "Mengambil semua data user",
                "operationId": "getUsers",
                "responses": {
                    "200": {
                        "description": "Berhasil mengambil data user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/User"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Create a new user",
                "description": "Membuat user baru",
                "operationId": "createUser",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Budi"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "budi@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "secret123"
                                    },
                                    "profile_image": {
                                        "type": "string",
                                        "example": "http://example.com/image.jpg",
                                        "nullable": true
                                    },
                                    "address": {
                                        "type": "string",
                                        "example": "Jl. Mawar No. 5",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User berhasil dibuat",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User created successfully"
                                        },
                                        "user": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/users/{id}": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get a user by ID",
                "description": "Mengambil data user berdasarkan ID",
                "operationId": "getUserById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID user",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User ditemukan",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User tidak ditemukan"
                    }
                }
            },
            "put": {
                "tags": [
                    "Users"
                ],
                "summary": "Update user data",
                "description": "Memperbarui data user berdasarkan ID",
                "operationId": "updateUser",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID user",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": false,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Andi"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "andi@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "newpassword123"
                                    },
                                    "profile_image": {
                                        "type": "string",
                                        "example": "http://example.com/new.jpg",
                                        "nullable": true
                                    },
                                    "address": {
                                        "type": "string",
                                        "example": "Jl. Kenanga No. 7",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User berhasil diperbarui",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User updated successfully"
                                        },
                                        "user": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User tidak ditemukan"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Users"
                ],
                "summary": "Delete a user",
                "description": "Menghapus user berdasarkan ID",
                "operationId": "deleteUser",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID user",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User berhasil dihapus",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User tidak ditemukan"
                    }
                }
            }
        },
        "/reviews": {
            "get": {
                "tags": [
                    "Reviews"
                ],
                "summary": "Get all reviews",
                "description": "Mengambil semua review beserta data user dan produk terkait",
                "operationId": "getReviews",
                "responses": {
                    "200": {
                        "description": "Berhasil mengambil data review",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Review"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Terjadi kesalahan server"
                    }
                }
            },
            "post": {
                "tags": [
                    "Reviews"
                ],
                "summary": "Create a review",
                "description": "Membuat review baru untuk produk",
                "operationId": "createReview",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "user_id",
                                    "product_id",
                                    "rating"
                                ],
                                "properties": {
                                    "user_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "product_id": {
                                        "type": "integer",
                                        "example": 3
                                    },
                                    "rating": {
                                        "type": "integer",
                                        "example": 4
                                    },
                                    "review": {
                                        "type": "string",
                                        "example": "Produk bagus, sangat puas!"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Review berhasil dibuat",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Review created successfully"
                                        },
                                        "review": {
                                            "$ref": "#/components/schemas/Review"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request tidak valid"
                    },
                    "500": {
                        "description": "Terjadi kesalahan server"
                    }
                }
            }
        },
        "/reviews/{id}": {
            "get": {
                "tags": [
                    "Reviews"
                ],
                "summary": "Get a review by ID",
                "description": "Mengambil review berdasarkan ID",
                "operationId": "getReviewById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID review",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Berhasil mengambil review",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Review"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Review tidak ditemukan"
                    },
                    "500": {
                        "description": "Terjadi kesalahan server"
                    }
                }
            },
            "put": {
                "tags": [
                    "Reviews"
                ],
                "summary": "Update a review",
                "description": "Memperbarui review berdasarkan ID",
                "operationId": "updateReview",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID review",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": false,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "user_id": {
                                        "type": "integer",
                                        "example": 2
                                    },
                                    "product_id": {
                                        "type": "integer",
                                        "example": 4
                                    },
                                    "rating": {
                                        "type": "integer",
                                        "example": 5
                                    },
                                    "review": {
                                        "type": "string",
                                        "example": "Produk semakin baik!"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Review berhasil diperbarui",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Review updated successfully"
                                        },
                                        "review": {
                                            "$ref": "#/components/schemas/Review"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Review tidak ditemukan"
                    },
                    "500": {
                        "description": "Terjadi kesalahan server"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Reviews"
                ],
                "summary": "Delete a review",
                "description": "Menghapus review berdasarkan ID",
                "operationId": "deleteReview",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID review",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Review berhasil dihapus",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Review deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Review tidak ditemukan"
                    },
                    "500": {
                        "description": "Terjadi kesalahan server"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Cart": {
                "title": "Cart",
                "description": "Data keranjang belanja",
                "required": [
                    "quantity",
                    "total_price",
                    "product_id",
                    "user_id"
                ],
                "properties": {
                    "cart_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "quantity": {
                        "type": "integer",
                        "example": 2
                    },
                    "total_price": {
                        "type": "number",
                        "format": "float",
                        "example": 150000
                    },
                    "product_id": {
                        "type": "integer",
                        "example": 3
                    },
                    "user_id": {
                        "type": "integer",
                        "example": 5
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-04-23T12:00:00Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-04-23T12:30:00Z"
                    },
                    "product": {
                        "properties": {
                            "product_id": {
                                "type": "integer",
                                "example": 3
                            },
                            "name": {
                                "type": "string",
                                "example": "Buku Tulis"
                            },
                            "price": {
                                "type": "number",
                                "format": "float",
                                "example": 75000
                            }
                        },
                        "type": "object",
                        "nullable": true
                    },
                    "user": {
                        "properties": {
                            "user_id": {
                                "type": "integer",
                                "example": 5
                            },
                            "name": {
                                "type": "string",
                                "example": "John Doe"
                            },
                            "email": {
                                "type": "string",
                                "example": "john@example.com"
                            }
                        },
                        "type": "object",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "Category": {
                "title": "Category",
                "description": "Data kategori produk",
                "required": [
                    "category_id",
                    "name"
                ],
                "properties": {
                    "category_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "Electronics"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-04-23T12:00:00Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-04-23T12:30:00Z"
                    }
                },
                "type": "object"
            },
            "Order": {
                "title": "Order",
                "description": "Data pesanan pengguna",
                "required": [
                    "order_id",
                    "final_price",
                    "cart_id",
                    "payment_id",
                    "order_date"
                ],
                "properties": {
                    "order_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "final_price": {
                        "type": "number",
                        "format": "float",
                        "example": 20
                    },
                    "cart_id": {
                        "type": "integer",
                        "example": 5
                    },
                    "payment_id": {
                        "type": "integer",
                        "example": 3
                    },
                    "order_date": {
                        "type": "string",
                        "format": "date",
                        "example": "2025-04-23"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-04-23T12:00:00Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-04-23T12:30:00Z"
                    }
                },
                "type": "object"
            },
            "Payment": {
                "title": "Payment",
                "required": [
                    "id",
                    "payment_method",
                    "status"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "payment_method": {
                        "type": "string",
                        "example": "Credit Card"
                    },
                    "status": {
                        "type": "string",
                        "example": "paid"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "Product": {
                "title": "Product",
                "description": "Data produk yang tersedia",
                "required": [
                    "product_id",
                    "name",
                    "price",
                    "category_id"
                ],
                "properties": {
                    "product_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "Smartphone"
                    },
                    "thumbnail_image": {
                        "type": "string",
                        "example": "path/to/thumbnail.jpg"
                    },
                    "stock": {
                        "type": "integer",
                        "example": 100
                    },
                    "status": {
                        "type": "string",
                        "example": "available"
                    },
                    "description": {
                        "type": "string",
                        "example": "A high-quality smartphone"
                    },
                    "price": {
                        "type": "number",
                        "format": "float",
                        "example": 199.99
                    },
                    "store_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "category_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-04-23T12:00:00Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-04-23T12:30:00Z"
                    }
                },
                "type": "object"
            },
            "ProductImage": {
                "title": "Product Image",
                "description": "Gambar tambahan untuk produk",
                "required": [
                    "product_images_id",
                    "name",
                    "product_id",
                    "path"
                ],
                "properties": {
                    "product_images_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "product_image_1.jpg"
                    },
                    "product_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "path": {
                        "type": "string",
                        "example": "path/to/image.jpg"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-04-23T12:00:00Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-04-23T12:30:00Z"
                    }
                },
                "type": "object"
            },
            "Review": {
                "title": "Review",
                "description": "Model Review untuk produk",
                "required": [
                    "user_id",
                    "product_id",
                    "rating"
                ],
                "properties": {
                    "review_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "user_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "product_id": {
                        "type": "integer",
                        "example": 3
                    },
                    "rating": {
                        "type": "integer",
                        "example": 4
                    },
                    "review": {
                        "type": "string",
                        "example": "Produk bagus, sangat puas!"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-04-23T12:00:00Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-04-23T12:30:00Z"
                    },
                    "user": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/User"
                            }
                        ],
                        "nullable": true
                    },
                    "product": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/Product"
                            }
                        ],
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "Store": {
                "title": "Store",
                "required": [
                    "name",
                    "city"
                ],
                "properties": {
                    "store_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "Toko Elektronik"
                    },
                    "city": {
                        "type": "string",
                        "example": "Bandung"
                    },
                    "profile_image": {
                        "type": "string",
                        "example": "http://example.com/image.jpg",
                        "nullable": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-04-30T12:00:00Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-04-30T12:30:00Z"
                    }
                },
                "type": "object"
            },
            "User": {
                "title": "User",
                "required": [
                    "name",
                    "email",
                    "password"
                ],
                "properties": {
                    "user_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "Budi"
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "example": "budi@example.com"
                    },
                    "password": {
                        "type": "string",
                        "format": "password",
                        "example": "secret123"
                    },
                    "profile_image": {
                        "type": "string",
                        "example": "http://example.com/image.jpg",
                        "nullable": true
                    },
                    "address": {
                        "type": "string",
                        "example": "Jl. Mawar No. 5",
                        "nullable": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-04-30T12:00:00Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-04-30T12:30:00Z"
                    }
                },
                "type": "object"
            }
        }
    },
    "tags": [
        {
            "name": "Carts",
            "description": "Carts"
        },
        {
            "name": "Orders",
            "description": "Orders"
        },
        {
            "name": "Payments",
            "description": "Payments"
        },
        {
            "name": "Stores",
            "description": "Stores"
        },
        {
            "name": "Users",
            "description": "Users"
        },
        {
            "name": "Reviews",
            "description": "Reviews"
        }
    ]
}